1.Write a program to accept N values into an integer array and display the contents of the array in the reverse order.

#include <stdio.h>
int main() {
 int n;
 scanf("%d",&n);
 int arr[n];
 for(int i=0;i<n;i++)
     scanf("%d",&arr[i]);
for(int j=n-1;j>=0;j--)
printf("%d ",arr[j]);
    return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------
2.Write a  program to count the number of 0s and 1s in an array that is in random order. You may assume that the array consists of only 0s and 1s.

#include <stdio.h>

int main() {
 int n,zeros=0,ones=0;
 scanf("%d",&n);
 int arr[n];
 for(int i=0;i<n;i++)
     scanf("%d",&arr[i]);
for(int j=0;j<n;j++)
{
    if(arr[j]==0)
    zeros++;
    if(arr[j]==1)
    ones++;
}
printf("zeros:%d\nones:%d\n",zeros,ones);
return 0;
}
------------------------------------------------------------------------------------------------------------------------------------------------------------
3. Write a  program to print the count of the elements in an array whose values are lesser than a key element in an unsorted array.
#include <stdio.h>
int main() {
   int n,count=0,key;
   scanf("%d",&n);
   int arr[n];
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
   printf("\nKEY value:");
   scanf("%d",&key);
   for(int j=0;j<n;j++)
   {
       if(key>arr[j])
       count++;
   }
   printf("Count:%d",count);
    return 0;
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------
4.Write a  Program to print all the repeated elements in a sorted array.

#include <stdio.h>
int main() {
   int n,temp=0;
   scanf("%d",&n);
   int arr[n];
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
   printf("Repeated Elements ");
   for(int j=0;j<n-1;j++)
   {
       if(temp==arr[j])
       continue;
       else{
           if(arr[j]==arr[j+1])
             printf("%d ",arr[j]);
             temp=arr[j];
             }
   }
    return 0;
}
------------------------------------------------------------------------------------------------------------------------------------------
5.Write a program to search an element in the given array and print the searched elements index. If no such elements were found print -1
#include <stdio.h>
int main() {
   int n,s,temp=0,flag=0;
   scanf("%d",&n);
   int arr[n];
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
   printf("Search Element:");
   scanf("%d",&s);
   for(int j=0;j<n;j++)
   {
       if(s==arr[j]){
       temp=j;
        flag++;
       }
   }
   if(flag==1)
   printf("%d",temp);
   else
   printf("%d",-1);
    return 0;
}
--------------------------------------------------------------------------------------------------------------------------------------
6.You are given an array of 0s and 1s in random order. Segregate 0s on left side and 1s on right side of the array . 
Input array   =  [0, 1, 0, 1, 0, 0, 1, 1, 1, 0] 
Output array =  [0, 0, 0, 0, 0, 1, 1, 1, 1, 1] 
#include <stdio.h>
int main() {
   int n,swap;
   scanf("%d",&n);
   int arr[n];
   printf("Enter the value 0's & 1's: ");
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
  for(int i=0;i<n;i++)
  {
      for(int j=1;j<n;j++)
      {
          if(arr[j]<arr[j-1])
          {
              swap=arr[j];
              arr[j]=arr[j-1];
              arr[j-i]=swap;
          }
          
      }
  }
   for(int i=0;i<n;i++)
   printf("%d",arr[i]);
    return 0;
}//Bubble sort
-----------------------------------------------------------------------------------------------------------------------
7.Write a program  to replace every element in an array with the sum of its right side elements
#include <stdio.h>
int main() {
   int n,sum;
   scanf("%d",&n);
   int arr[n];
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
  for(int i=0;i<n;i++)
  {
      for(int j=i+1;j<n;j++)
      {
          sum=sum+arr[j];
      }
      arr[i]=sum;
      sum=0;
  }
   for(int i=0;i<n;i++)
   printf("%d ",arr[i]);
    return 0;
}
------------------------------------------------------------------------------------------------------------------------
8.Write a program  to reverse the array elements
#include <stdio.h>
int main() {
   int n,sum;
   scanf("%d",&n);
   int arr[n];
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
   for(int i=n-1;i>=0;i--)
   printf("%d ",arr[i]);
    return 0;
}
----------------------------------------------------------------------------------------------------------------------
9.Write a program  to insert the value at given position in the array.
#include <stdio.h>
int main() {
   int n,v,k;
   scanf("%d",&n);
   int arr[n+1];
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
   printf("Enter the value:");
   scanf("%d",&v);
    printf("Enter the value:");
   scanf("%d",&k);
  for(int i=n+1;i>=k;i--)
  {
      arr[i]=arr[i-1];
 }
 arr[k-1]=v;
   for(int i=0;i<n+1;i++)
   printf("%d ",arr[i]);
    return 0;
}
---------------------------------------------------------------------------------------------------------------------------
10.Write a program  to delete the value at given position from the array.
#include <stdio.h>

int main() {
   int n,pos;
   scanf("%d",&n);
   int arr[n];
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
   printf("Enter the position:");
   scanf("%d",&pos);
       for(int j=pos-1;j<n-1;j++)
       {
            arr[j]=arr[j+1];   
   }
   for(int i=0;i<n-1;i++)
    printf("%d",arr[i]);
    return 0;
}
----------------------------------------------------------------------------------------------------------------------------
11.Write a program  to swap every pair of  adjacent array elements
#include <stdio.h>

int main() {
   int n,temp=0;
   scanf("%d",&n);
   int arr[n];
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
  for(int i=1;i<n;i+=2)
  {
      temp=arr[i];
      arr[i]=arr[i-1];
      arr[i-1]=temp;
  }
   for(int i=0;i<n;i++)
    printf("%d ",arr[i]);
    return 0;
}
--------------------------------------------------------------------------------------------------------------------
12.Write a program  to left rotate for given times of an array elements
#include <stdio.h>

int main() {
   int n,temp=0,t;
   scanf("%d",&n);
   int arr[n];
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
   printf("Enter the time for left rotate:");
   scanf("%d",&t);
  for(int i=0;i<t;i++)
  {temp=arr[0];
      for(int j=0;j<n;j++)
      {
      arr[j]=arr[j+1];
  }
  arr[n-1]=temp;
  }
   for(int i=0;i<n;i++)
    printf("%d ",arr[i]);
    return 0;
}
----------------------------------------------------------------------------------------------------------------
13.Given an array X with n number of elements, return true if the given array X is sorted else return false. You may consider multiple positions may be shifted in the array X. 
Example 1: Input: X=[1,2,3,4,5] Output: true 
Example 2: Input: X=[3,4,5, 1,2,] Output: true
// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int size,count=0,min,pos=0,limit;
    scanf("%d",&size);
    int arr[size];
    for(int i=0;i<size;i++)
    scanf("%d",&arr[i]);
    min=arr[0];
    for(int i=0;i<size;i++)
    {
        if(min>=arr[i]){
        min=arr[i];
        pos=i;}
    }
    printf("MIN:%d\nPOS:%d\nSIZE:%d",min,pos,size);
    limit=size-1;
    while(limit>0)
    {
     if(arr[pos%size]<arr[(pos+1)%size])
         count++;
         pos++;
         limit--;
    }
    if(count==size-1)
    printf("\nTRUE");
    else
    printf("\nFALSE");
    }
----------------------------------------------------------------------------------------------------------------------
14.Write a program  to remove the duplicates in an array .
#include <stdio.h>

int main() {
   int n;
   scanf("%d",&n);
   int arr[n];
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
   for(int i=0;i<n;i++)
  {
      for(int j=i+1;j<n;j++)
      {
      if(arr[i]==arr[j])
      {
           for(int k=j;k<n;k++){
              arr[k]=arr[k+1];}
          n--;
      }
  }
  }
   for(int i=0;i<n;i++)
    printf("%d ",arr[i]);
    return 0;
}
-------------------------------------------------------------------------------------------------------------------------
15.Write a program  to find second largest and second smallest in array
#include <stdio.h>

int main() {
   int n,temp;
   scanf("%d",&n);
   int arr[n];
   for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
   for(int i=1;i<n;i++)
  {
      for(int j=0;j<n-1;j++)
      {
      if(arr[j]>arr[j+1])
      {
         temp=arr[j+1];
         arr[j+1]=arr[j];
         arr[j]=temp;
      }
  }
  }
   for(int i=0;i<n;i++)
    printf("%d ",arr[i]);
    return 0;
}
--------------------------------------------------------------------------------------------------------
16.odd in ascending and even in decending

// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int n,i,temp;
    scanf("%d",&n);
    int arr[n];
    for(i=0;i<n;i++)
    scanf("%d",&arr[i]);
     for(i=0;i<n;i++){
        if(arr[i]%2!=0)
        {
            arr[i]=-arr[i];
        }
     }
     for(i=0;i<n;i++)
     {
         for(int j=1;j<n;j++)
         {
             if(arr[j]>arr[j-1])
             {
                 temp=arr[j];
                 arr[j]=arr[j-1];
                 arr[j-1]=temp;
             }
         }
     }
     for(i=0;i<n;i++)
     printf("%d ",arr[i]);
     for(i=0;i<n;i++){
        if(arr[i]%2!=0)
        {
            arr[i]=-arr[i];
        }
     }
      printf("\n");
     for(i=0;i<n;i++)
     printf("%d ",arr[i]);
    return 0;
}
---------------------------------------------------------------------------------------------------------------
17.0's,1's and 2's arrenge in acending order
// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int n,temp;
    scanf("%d",&n);
    int arr[n];
    printf("Enter only 0,1,2 values:");
    for(int i=0;i<n;i++)
    scanf("%d",&arr[i]);
    for(int i=0;i<n;i++)
    {
        for(int j=i;j<n;j++)
        {
            if(arr[j]<arr[j-1]){
            temp=arr[j];
            arr[j]=arr[j-1];
            arr[j-1]=temp;}
        }
    }

     for(int i=0;i<n;i++)
     printf("%d ",arr[i]);
    return 0;
}
----------------------------------------------------------------------------------------------------
18.Leader means if the ride is less means print the leader
// Online C compiler to run C program online
#include <stdio.h>

int main() {
    int n,flag;
    scanf("%d",&n);
    int arr[n];
    for(int i=0;i<n;i++)
    scanf("%d",&arr[i]);
    for(int i=0;i<n;i++)
    {flag=0;
        for(int j=i;j<n;j++)
        {
            if(arr[i]>=arr[j])
            flag=1;
            else{
                flag=2;
                break;
            }
            }
        if(flag==1)
        printf("%d ",arr[i]);
    }
    return 0;
}
---------------------------------------------------------------------------------------------------------------------
import java.util.Scanner;

public class mergearrays {
    public static void main(String[] args) {
        Scanner sc= new Scanner(System.in);
        int[][] arr = new int[100][3];
        int index=0;
        while(true){
            System.out.println("Enter an a array (yes/no)");
            String res=sc.next();
            if(res.equals("no"))
            break;
            System.out.println("Start:");
            arr[index][0]=sc.nextInt();
            System.out.println("End:");
            arr[index][1]=sc.nextInt();
            System.out.println("Value:");
            arr[index][2]=sc.nextInt();
            index++;

            index=check(arr,index);
            for(int i=0;i<index;i++){
                System.out.println(arr[i][0]+" "+arr[i][1]+" "+arr[i][2]);
            }
        }
        
    }
    public static int check(int arr[][],int index){
        int j=index-1;
        for(int i=index-1;i>=1;i--){
            if(arr[j][0]<arr[i-1][1] && arr[j][0]>arr[i-1][0]){
                int min=Math.min(arr[j][0], arr[i-1][0]);
                int max=Math.max(arr[j][1], arr[i-1][1]);
                int value=arr[j][2]+arr[i-1][2];
                arr[i-1][0]=min;
                arr[i-1][1]=max;
                arr[i-1][2]=value;
                index--;
            }
        }
        return index;
    }
}
------------------------------------------------------------------------------------
20.M pattern
#include <stdio.h>

int main() {
  int n,space;
  scanf("%d",&n);
  space=n;
  for(int i=0;i<n;i++)
  {          printf("\n");
      for(int j=0;j<n;j++)
      {
        if(j==0 || j==n-1)
          printf("*");
        if(0<i&&i<n-2){
            if(j==i||(j==space-1))
            {
                printf("*\t");
                space--;
            }
            else
            printf("\t");
        }
        else
        printf("\t");
         
        
      }
  }

    return 0;
}
output
5

*		  		 *	
*	*		 *	*	
*		 *		 *	
*				   *	
*				   *	
